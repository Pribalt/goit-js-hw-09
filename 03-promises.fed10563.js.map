{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAmCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EAEFF,EAAQ,C,SAAEH,E,MAAUC,IAGpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA7CEQ,SAASC,cAAc,SAE/BC,iBAAiB,UAExB,SAA0BC,GACxBA,EAAEC,iBAEF,MACEZ,OAASa,MAAOb,GAChBc,MAAQD,MAAOC,GACfC,QAAUF,MAAOE,IACfJ,EAAEK,eAIR,SAAsBC,EAAOH,EAAMC,GACjC,IAAK,IAAIG,EAAI,EAAGA,EAAIH,EAAQG,GAAK,EAAG,CAGlCpB,EAFsBoB,EAAI,EACPD,EAAQH,EAAOI,GAE/BC,MAAK,EAACpB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAAxB,GAASyB,OAAOC,QACd,uBAAqBvB,QAAiBC,MAAU,IAGnDuB,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBoB,EAAAxB,GAASyB,OAAOG,QACd,sBAAoBzB,QAAeC,MAAU,G,EAfrDyB,CAAaC,OAAO1B,GAAQ0B,OAAOZ,GAAOY,OAAOX,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\n\nformEl.addEventListener('submit', onClickBtnSubmit);\n\nfunction onClickBtnSubmit(e) {\n  e.preventDefault();\n\n  const {\n    delay: { value: delay },\n    step: { value: step },\n    amount: { value: amount },\n  } = e.currentTarget;\n  promiseCycle(Number(delay), Number(step), Number(amount));\n}\n\nfunction promiseCycle(delay, step, amount) {\n  for (let i = 0; i < amount; i += 1) {\n    const positionCycle = i + 1;\n    const delayCycle = delay + step * i;\n    createPromise(positionCycle, delayCycle)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","value","step","amount","currentTarget","delay1","i","then","$parcel$interopDefault","Notify","success","catch","failure","$47d4ff9957288465$var$promiseCycle","Number"],"version":3,"file":"03-promises.fed10563.js.map"}